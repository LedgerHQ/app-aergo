name: Compilation & Tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  nano_build:
    name: Build the application for Nano S
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            artifact: aergo-app-nanos
          #- SDK: "$NANOX_SDK"
          #  artifact: aergo-app-nanox
          #- SDK: "$NANOSP_SDK"
          #  artifact: aergo-app-nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Build
        run: |
          make BOLOS_SDK=${{ matrix.SDK }}
      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: bin


  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2
      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build


  job_unit_test:
    name: Unit test
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Build unit tests
        run: |
          cd unit-tests/
          # cmake -Bbuild -H. && make -C build && make -C build test
          ./run_tests
      - name: Generate code coverage
        run: |
          cd unit-tests/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base && \
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture && \
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info && \
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/unit-tests/*' -o coverage.info && \
          genhtml coverage.info -o coverage

      - uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: unit-tests/coverage

      #- name: Upload to codecov.io
      #  uses: codecov/codecov-action@v1
      #  with:
      #    token: ${{ secrets.CODECOV_TOKEN }}
      #    file: ./unit-tests/coverage.info
      #    flags: unittests
      #    name: codecov-app-aergo
      #    fail_ci_if_error: true
      #    verbose: true


  job_functional_test_speculos:
    name: Functional tests with Speculos only
    strategy: 
      matrix:
        include:
          - model: nanos
            SDK: "2.1"
          #- model: nanox
          #  SDK: "2.0.2"
          #- model: nanosp
          #  SDK: "1.0.3"
    needs:
      - nano_build
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Download app binary
        uses: actions/download-artifact@v2
        with:
          name: aergo-app-${{matrix.model}}
          path: bin
      - name: Install tests dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y qemu-user-static
          pip install --extra-index-url https://test.pypi.org/simple/ -r tests/speculos/requirements.txt
      - name: Run test
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: pytest tests/speculos/ --model=${{ matrix.model }} --sdk=${{ matrix.SDK }}
